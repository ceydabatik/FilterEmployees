using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;

public class Solution
{
    public static string FilterEmployees(IEnumerable<(string Name, int Age, string Department, decimal Salary, DateTime HireDate)> employees)
    {
        var query = employees
            .Where(e => e.Age >= 25 && e.Age <= 40)
            .Where(e => e.Department == "IT" || e.Department == "Finance")
            .Where(e => e.Salary >= 5000 && e.Salary <= 9000)
            .Where(e => e.HireDate.Year > 2017)
            .ToList();

        var orderedNames = query
            .Select(e => e.Name)
            .OrderByDescending(n => n.Length)
            .ThenBy(n => n)
            .ToList();

        var result = new
        {
            Names = orderedNames,
            TotalSalary = query.Count > 0 ? query.Sum(e => e.Salary) : 0,
            AverageSalary = query.Count > 0 ? Math.Round(query.Average(e => Convert.ToDouble(e.Salary)), 2) : 0,
            MinSalary = query.Count > 0 ? query.Min(e => e.Salary) : 0,
            MaxSalary = query.Count > 0 ? query.Max(e => e.Salary) : 0,
            Count = query.Count
        };

        return JsonSerializer.Serialize(result);
    }
}

class Program
{
    public static void Main()
    {
        var employees = new List<(string, int, string, decimal, DateTime)>
        {
            ("Ceyda", 30, "IT", 6000m, new DateTime(2018, 5, 1)),
            ("Zeynep", 35, "Finance", 8500m, new DateTime(2019, 3, 15)),
            ("Elif", 28, "IT", 7000m, new DateTime(2020, 1, 1))
        };

        string result = Solution.FilterEmployees(employees);
        Console.WriteLine(result);
    }
}
